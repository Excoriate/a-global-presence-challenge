---
version: '3'

dotenv: [.env]

includes:
    common:
        taskfile: ./DevEx/taskfile/Taskfile.common.yml


vars:
    PROJECT_ID: '{{default "labs-experiments-oss" .PROJECT_ID}}'
    STACK: '{{default "" .STACK}}'
    MODULE: '{{default "google-services" .MODULE}}'
    FUNCTION: '{{default "trigger" .FUNCTION}}'
    REGION: '{{default "europe-west4" .REGION}}'
    LOCATION: '{{default "europe-west4" .LOCATION}}'
    ACCESS_TOKEN: '{{default "" .ACCESS_TOKEN}}'
    ENVIRONMENT: '{{default "sandbox" .ENVIRONMENT}}'



tasks:
    default:
        cmds:
            - task: common:default

    pre-commit-init:
        desc: Initialize and install required hooks
        cmds:
            - task: common:hooks-install

    pre-commit:
        desc: Run all the pre-configured pre-commit hooks.
        cmds:
            - task: common:hooks

    tf-gcp-init:
        desc: Create and set a service account for TF, in GCP
        cmds:
            - ./scripts/gcp/create-tf-service-account.sh {{.PROJECT_ID}}

    tg:
        desc: Run Terragrunt commands
        dir: infra/terraform/stacks
        cmds:
            - |
              export TF_VAR_environment="sandbox" && \
              export TF_VAR_region={{.REGION}} && \
              export TF_VAR_project_id="{{.PROJECT_ID}}" && \
              cd {{.STACK}}/{{.MODULE}} && ls -ltrah && terragrunt {{.CLI_ARGS}}

    tg-trigger:
        desc: Deploy the trigger function
        dir: infra/terraform/stacks/cloud-function/trigger
        cmds:
            - |
              export TF_VAR_environment="{{.ENVIRONMENT}}" && \
              export TF_VAR_region={{.REGION}} && \
              export TF_VAR_project_id="{{.PROJECT_ID}}" && \
              export TF_VAR_access_token_env_var={{.ACCESS_TOKEN}} && \
              terragrunt {{.CLI_ARGS}}


    function-compile:
        desc: Compile the function
        dir: functions
        cmds:
            - |
              cd {{.FUNCTION}}
              if [ -f "go.mod" ]; then
                go mod tidy
                go mod vendor
              fi

              if [ -f "{{.FUNCTION}}.zip" ]; then
                  rm {{.FUNCTION}}.zip
              fi

              go build -o {{.FUNCTION}} main.go
